{{- define "repository.organization" -}}
  nicholaswilde
{{- end -}}

{{- define "repository.url" -}}
  https://github.com/nicholaswilde/helm-charts
{{- end -}}

{{- define "helm.url" -}}
  https://andre161292.github.io/nicholaswilde-helm-charts/
{{- end -}}

{{- define "helm.path" -}}
    {{ template "repository.organization" . }}/{{ template "chart.name" . }}
{{- end -}}

{{- define "install.tldr" -}}
## TL;DR
```console
$ helm repo add {{ template "repository.organization" . }} {{ template "helm.url" . }}
$ helm repo update
$ helm install {{ template "chart.name" . }} {{ template "helm.path" . }}
```
{{- end -}}

{{- define "install" -}}
## Installing the Chart
To install the chart with the release name `{{ template "chart.name" . }}`:
```console
helm install {{ template "chart.name" . }} {{ template "helm.path" . }}
```
{{- end -}}

{{- define "uninstall" -}}
## Uninstalling the Chart
To uninstall the `{{ template "chart.name" . }}` deployment:
```console
helm uninstall {{ template "chart.name" . }}
```
The command removes all the Kubernetes components associated with the chart and deletes the release.
{{- end -}}

{{- define "configuration.header" -}}
## Configuration
{{- end -}}

{{- define "configuration.readValues" -}}
Read through the [values.yaml](./values.yaml) file. It has several commented out suggested values.
Other values may be used from the [values.yaml](../common/values.yaml) from the [common library](../common).
{{- end -}}

{{- define "configuration.example.set" -}}
Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
```console
helm install {{ template "chart.name" . }} \
  --set env.TZ="America/New York" \
    {{ template "helm.path" . }}
```
{{- end -}}

{{- define "configuration.example.file" -}}
Alternatively, a YAML file that specifies the values for the above parameters can be provided while installing the chart.
For example,
```console
helm install {{ template "chart.name" . }} {{ template "helm.path" . }} -f values.yaml
```
{{- end -}}

{{- define "gpu" -}}
## GPU
See the following resoures to setup BOINC to work with a GPU
- [AMD GPU device plugin for Kubernetes](https://github.com/RadeonOpenCompute/k8s-device-plugin)
- [Schedule GPUs](https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/)
- [intel-gpu-plugin helm chart](https://artifacthub.io/packages/helm/k8s-at-home/intel-gpu-plugin)
- [Intel device plugin for kubernetes](https://github.com/intel/intel-device-plugins-for-kubernetes#gpu-device-plugin)
- [BOINC Client Setup on Kubernetes](https://github.com/jaysgrant/kubernetes_boinc_client_setup)
{{- end -}}

{{- define "todo" -}}
## Todo
- [ ] Add support and instructions for [other architectures](https://github.com/BOINC/boinc-client-docker#supported-architectures-and-tags).
{{- end -}}

{{- define "author" -}}
## Author
This project was started in 2020 by [Nicholas Wilde](https://github.com/{{ template "repository.organization" . }}).
{{- end -}}

{{ template "chart.header" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.kubeVersionLine" . }}

{{ template "install.tldr" . }}

{{ template "install" . }}

{{ template "uninstall" . }}

{{ template "configuration.header" . }}

{{ template "configuration.readValues" . }}

{{ template "configuration.example.set" . }}

{{ template "configuration.example.file" . }}

{{ template "gpu" . }}

{{ template "todo" . }}

{{ template "author" . }}

{{ template "helm-docs.versionFooter" . }}
